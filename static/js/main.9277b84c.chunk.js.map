{"version":3,"sources":["logo.svg","pokeball.svg","components/terminal/actions.ts","components/terminal/pathParser.ts","components/terminal/commands/cd.ts","components/terminal/commands/ls.ts","components/terminal/commands/clear.ts","components/terminal/commands/index.ts","components/terminal/index.tsx","components/stateView/index.tsx","components/pages/home.tsx","components/pages/shared/genericPage.tsx","components/pages/shared/testParentPage.tsx","components/pages/pokemon/single.tsx","components/pages/pokemon/styles.ts","components/pages/pokemon/list.tsx","components/pages/pokemon/api.tsx","components/pages/pokemon/full.tsx","components/pages/pokemon/index.tsx","components/router.tsx","App.tsx","serviceWorker.ts","initialState.ts","store.ts","components/terminal/reducer.ts","index.tsx"],"names":["module","exports","TerminalActions","actions","submitTerminal","terminalValue","type","SUBMIT","payload","submitLS","lsRoute","LS","TerminalNavigationError","Error","pathParser","props","location","pathname","split","slice","routes","startsWith","dotRoute","pop","remainder","filter","str","length","TerminalArgumentError","cd","pathRoutes","history","push","join","ls","reducedUrls","urls","forEach","path","index","key","newUrls","error","TypeError","TerminalTerminatedPathError","Object","keys","constructPaths","Command","clear","commands","PWD","CD","RUN","CLEAR","errors","command","args","Terminal","withRouter","connect","state","terminal","dispatch","bindActionCreators","useState","value","setValue","setError","className","onSubmit","e","preventDefault","submitedValue","words","parseSubmitedValue","commandArgs","includes","console","log","getCommand","message","onChange","target","map","item","StateView","stateBlocks","partialState","jsonPrettyString","JSON","stringify","renderBlock","Home","GenericPage","title","TestParentPage","rootKeys","basePath","childrenPath","exact","render","Pokemon","name","onClick","styles","pokemonList","display","listStyle","flexWrap","pokemonInfo","padding","useStyles","createUseStyles","PokemonList","classes","pokeData","safeFetch","url","fetchOptions","a","fetch","resp","status","getFirstTwenty","json","body","results","getFullPokemon","FullPokemon","pokemonData","setPokemonData","match","params","useEffect","data","populateData","height","weight","types","typeNames","sort","typeObj","slot","keysToHide","InfoRenderer","Link","pokeDataKey","hovered","setHovered","keysToShow","pokeKey","setPokemonList","filteredList","setFilteredList","setFilter","newList","updatePokemon","filtered","pokemon","search","isEqual","ListSection","paths","component","num","Page1","Page2","Page3","Router","src","pokeball","alt","logo","App","Boolean","window","hostname","initialState","persistConfig","storage","rootReducer","combineReducers","action","persistedReducer","persistReducer","store","createStore","persistor","persistStore","ReactDOM","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9277b84c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/pokeball.2b4798f5.svg\";","import { initialState } from \"initialState\";\r\n\r\nexport enum TerminalActions {\r\n  SUBMIT = 'TERMINAL_SUBMIT',\r\n  LS = 'TERMINAL_LS_SUBMIT'\r\n}\r\n\r\nconst submitTerminal = (terminalValue: Partial<typeof initialState[\"terminal\"]>) => ({\r\n  type: TerminalActions.SUBMIT,\r\n  payload: terminalValue\r\n})\r\n\r\nconst submitLS = (lsRoute: string[]) => {\r\n  return {\r\n    type: TerminalActions.LS,\r\n    payload: lsRoute\r\n  }\r\n}\r\nexport const actions = { submitTerminal, submitLS };","import { Props as TerminalProps } from 'components/terminal'\r\n\r\nexport class TerminalNavigationError extends Error { }\r\n\r\nexport function pathParser(props: TerminalProps, location: string): string[] {\r\n  if (!location) {\r\n    const lsRoute = props.location.pathname.split('/').slice(1);\r\n    return lsRoute\r\n  }\r\n\r\n  const routes = location.split('/');\r\n  if (location.startsWith('.')) {\r\n    // dot relative path\r\n    let dotRoute: string[] = [];\r\n    if (routes[0] === '.') dotRoute = [...props.location.pathname.split('/')];\r\n    if (routes[0] === '..') {\r\n      dotRoute = props.location.pathname.split('/');\r\n      dotRoute.pop();\r\n    }\r\n\r\n    const remainder = routes.slice(1)\r\n    const fullRoutes = [...dotRoute, ...remainder].filter(str => str !== '')\r\n\r\n    return fullRoutes\r\n\r\n  }\r\n  if (location.startsWith('~') || location.startsWith('/')) {\r\n    // we have an absolute path\r\n    if (routes[0] === '~' || routes[0] === '') return routes.length === 1 ? [] : routes.filter(str => str !== '');\r\n    if (routes.length > 1) throw new TerminalNavigationError('invalid syntax for naviagation')\r\n  }\r\n  // lastly relative without dot\r\n  // `${props.location.pathname}/${routes.join('/')}`.split('/')\r\n  return [...props.location.pathname.split('/'), ...routes].filter(str => str !== '');\r\n}","import { Props as TerminalProps } from 'components/terminal'\r\nimport { pathParser } from '../pathParser';\r\n\r\nexport class TerminalArgumentError extends Error { }\r\n\r\nexport function cd(props: TerminalProps, location: string) {\r\n  if (!location) {\r\n    throw new TerminalArgumentError('args is empty')\r\n  }\r\n  const pathRoutes = pathParser(props, location);\r\n  props.history.push(`/${pathRoutes.join('/')}`);\r\n  props.submitLS([] as string[]) // reset ls list every command\r\n}","import { Props as TerminalProps } from 'components/terminal'\r\nimport { urls } from 'components/router';\r\nimport { pathParser } from '../pathParser';\r\n\r\nexport function ls(props: TerminalProps, location: string) {\r\n  const lsRoute = pathParser(props, location);\r\n  return props.submitLS(constructPaths(lsRoute))\r\n}\r\n\r\nexport class TerminalTerminatedPathError extends Error { }\r\n\r\nexport function constructPaths(lsRoute: string[]) {\r\n  // 'ls /4/2' => lsRoute = [4,2]\\\r\n\r\n  let reducedUrls = { ...urls['/'] };\r\n\r\n  try {\r\n    lsRoute.forEach((path, index) => {\r\n      if (path === '') return;\r\n      const key = `/${path}`;\r\n      try {\r\n        const newUrls = { ...(reducedUrls as any)[key] }\r\n        reducedUrls = { ...newUrls };\r\n\r\n      } catch (error) {\r\n\r\n        if (error instanceof TypeError) {\r\n          if (reducedUrls as any === {}) {\r\n            throw new TerminalTerminatedPathError();\r\n          }\r\n          return reducedUrls\r\n        }\r\n        throw error;\r\n      }\r\n    })\r\n  } catch (error) {\r\n    if (error instanceof TerminalTerminatedPathError) {\r\n      return Object.keys(reducedUrls);\r\n    }\r\n    throw error;\r\n  }\r\n\r\n  return Object.keys(reducedUrls);\r\n}","import { Props as TerminalProps } from 'components/terminal'\r\n\r\nexport class TerminalArgumentError extends Error { }\r\n\r\nexport function clear(props: TerminalProps) {\r\n  props.submitLS([] as string[]) // reset ls list every command\r\n}","import { cd, TerminalArgumentError } from './cd';\r\nimport { ls } from './ls';\r\nimport { clear } from './clear';\r\nexport enum Command {\r\n  LS = 'ls',\r\n  PWD = 'pwd',\r\n  CD = 'cd',\r\n  RUN = 'run',\r\n  CLEAR = 'clear'\r\n}\r\nexport const commands = [\r\n  Command.LS,\r\n  Command.PWD,\r\n  Command.CD,\r\n  Command.RUN,\r\n  Command.CLEAR,\r\n]\r\n\r\nexport function getCommand(command: string) {\r\n  switch (command) {\r\n    case Command.LS:\r\n      return ls;\r\n    case Command.PWD:\r\n      return console.log;\r\n    case Command.CD:\r\n      return cd;\r\n    case Command.RUN:\r\n      return console.log;\r\n    case Command.CLEAR:\r\n      return clear\r\n    default:\r\n      return console.log;\r\n  }\r\n}\r\n\r\nexport const errors = {\r\n  INVALID_COMMAND: (command: string) => `command not found: ${command}`,\r\n  TOO_FEW_ARGUMENTS: (command: string, args?: string[]) => `too few arguments given to ${command}`\r\n}\r\n\r\nexport const Errors = {\r\n  TerminalArgumentError,\r\n}\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport { actions } from './actions';\r\nimport { commands, errors, getCommand, Command } from './commands';\r\nimport { TerminalArgumentError } from './commands/cd';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { initialState } from 'initialState';\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n  return bindActionCreators(actions, dispatch)\r\n}\r\nconst mapDispatchToState = (state: typeof initialState) => {\r\n  const { terminal } = state;\r\n  return {\r\n    terminal\r\n  }\r\n}\r\n\r\nexport type Props = ReturnType<typeof mapDispatchToState> & ReturnType<typeof mapDispatchToProps> & RouteComponentProps;\r\n\r\n\r\nconst parseSubmitedValue = (submitedValue: string) => {\r\n  if (!submitedValue) return;\r\n  const words = submitedValue.split(' ');\r\n  if (words.length === 0) {\r\n\r\n  }\r\n  return words\r\n}\r\n\r\nfunction BaseTerminal(props: Props) {\r\n  const [value, setValue] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!value) return; // returns early on empty submit\r\n    const [command, ...commandArgs] = parseSubmitedValue(value);\r\n    setValue('');\r\n\r\n    if (!commands.includes(command as Command)) {\r\n      setError(errors.INVALID_COMMAND(command));\r\n      return props.submitTerminal({ command: '', commandArgs: [] });\r\n    }\r\n    setError('');\r\n    try {\r\n      getCommand(command)(props, ...commandArgs);\r\n    } catch (error) {\r\n      if (error instanceof TerminalArgumentError) {\r\n        setError(errors.TOO_FEW_ARGUMENTS(command, commandArgs))\r\n      }\r\n      setError(error.message)\r\n    }\r\n    props.submitTerminal({ command, commandArgs, ls: [] });\r\n  }\r\n  const lsBlock = (item: string, key: number) => {\r\n    return (<ul key={key}>{item}</ul>)\r\n  }\r\n  return (\r\n    <section className='section'>\r\n      <form onSubmit={handleSubmit}>\r\n        $<input type=\"text\" onChange={e => setValue(e.target.value)} value={value} />\r\n      </form>\r\n      {error && <span>{error}</span>}\r\n      {props.terminal.ls && props.terminal.ls.map(lsBlock)}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport const Terminal = withRouter(connect(mapDispatchToState, mapDispatchToProps)(BaseTerminal))\r\nexport default Terminal;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { initialState } from 'initialState';\r\n\r\nconst mapStateToProps = (state: typeof initialState) => {\r\n  return { state };\r\n}\r\n\r\n\r\ntype Props = {} & ReturnType<typeof mapStateToProps>\r\n\r\n\r\nfunction BaseStateView(props: Props) {\r\n\r\n  const renderBlock = (partialState: Partial<typeof initialState>, index: number) => {\r\n    const jsonPrettyString = JSON.stringify(partialState, null, 4)\r\n    return (<li key={index}>{jsonPrettyString}</li>)\r\n  }\r\n\r\n  const stateBlocks = Object.keys(props.state)\r\n    .filter((key) => !key.startsWith('_')) // removing private state\r\n    .map((key, index) => renderBlock({ [key]: props.state[key as keyof typeof props.state] }, index))\r\n\r\n\r\n  return (\r\n    <section className='section'>\r\n      <ul>\r\n        {stateBlocks}\r\n      </ul>\r\n    </section>\r\n\r\n  )\r\n}\r\n\r\nexport const StateView = connect(mapStateToProps)(BaseStateView);\r\nexport default StateView;","import React from 'react';\r\nimport Terminal from 'components/terminal';\r\nimport StateView from 'components/stateView';\r\n\r\nexport const Home: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Terminal />\r\n      <StateView />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\ntype Props = { title: string | number }\r\n\r\nfunction BaseGenericPage(props: Props) {\r\n  const { title } = props;\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const GenericPage = BaseGenericPage;\r\nexport default GenericPage;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport GenericPage from './genericPage';\r\nimport { urls } from 'components/router';\r\n\r\nfunction BaseTestParentPage() {\r\n  const rootKeys = Object.keys(urls['/']);\r\n  const basePath = rootKeys[rootKeys.length - 1];\r\n  const childrenPath = Object.keys(urls['/'][\"/4\"]);\r\n  console.log(childrenPath)\r\n  return (\r\n    <Switch>\r\n      <Route path={`${basePath}`} exact render={() => <h1>4</h1>} />\r\n      <Route path={`${basePath}${childrenPath[0]}`} render={() => <GenericPage title={'4/1'} />} />\r\n      <Route path={`${basePath}${childrenPath[1]}`} render={() => <GenericPage title={'4/2'} />} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport const TestParentPage = BaseTestParentPage;\r\nexport default TestParentPage;","import React from 'react';\r\nimport { withRouter, RouteComponentProps } from 'react-router';\r\n\r\nexport type Props = RouteComponentProps & { name: string };\r\nconst BasePokemon = (props: Props) => {\r\n  const { name } = props;\r\n  const makeMainPokemon = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    props.history.push(`pokemon/${name}`);\r\n  }\r\n  return (\r\n    <div>\r\n      <button onClick={makeMainPokemon}>\r\n        <h1>{name}</h1>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\nexport const Pokemon = withRouter(BasePokemon);","import { createUseStyles } from 'react-jss';\r\nimport { CSSProperties } from 'react';\r\n\r\nconst pokemonList: CSSProperties = {\r\n  display: 'flex',\r\n  listStyle: 'none',\r\n  flexWrap: 'wrap',\r\n}\r\nconst pokemonInfo: CSSProperties = {\r\n  padding: '8px',\r\n}\r\n\r\nconst styles = { pokemonList, pokemonInfo }\r\n\r\nexport const useStyles = createUseStyles(styles as any);","import React from 'react';\r\nimport { Pokemon, Props as PokemonProps } from './single';\r\nimport { useStyles } from './styles';\r\n\r\ntype Props = { pokemonList: PokemonProps[] };\r\nexport const PokemonList = (props: Props) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <section>\r\n      <ol className={classes.pokemonList}>\r\n        {props.pokemonList.map(pokeData => <li key={pokeData.name} className={classes.pokemonInfo}><Pokemon {...pokeData} /></li>)}\r\n      </ol>\r\n\r\n    </section>\r\n  )\r\n}","const pokemonApiUrl = 'https://pokeapi.co/api/v2'\r\n\r\n\r\nconst safeFetch = async (url: string, fetchOptions?: RequestInit) => {\r\n  const resp = await fetch(url, fetchOptions)\r\n  if (400 <= resp.status) throw Error(`error sending request, recieved HTTP status code: ${resp.status}`);\r\n  return resp;\r\n}\r\n\r\n\r\nexport const getFirstTwenty = async () => {\r\n  try {\r\n    const resp = await safeFetch(`${pokemonApiUrl}/pokemon`)\r\n    const body = await resp.json()\r\n    console.log(body);\r\n    return body.results;\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nexport const getFullPokemon = async (name:string) => {\r\n  try {\r\n    const resp = await safeFetch(`${pokemonApiUrl}/pokemon/${name}`)\r\n    const body = await resp.json()\r\n    console.log(body);\r\n    return body\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { getFullPokemon } from './api';\r\n\r\ntype Props = RouteComponentProps<{ name: string }>;\r\nexport const FullPokemon = (props: Props) => {\r\n  const [pokemonData, setPokemonData] = useState<any>({});\r\n  const { name } = props.match.params;\r\n\r\n  useEffect(() => {\r\n    const populateData = async () => {\r\n      console.log('called', name)\r\n      const data = await getFullPokemon(name);\r\n      setPokemonData(data);\r\n      console.log(data);\r\n    }\r\n    populateData()\r\n  }, [setPokemonData, name])\r\n  const showedKeys = ['height', 'weight', 'types','name'];\r\n  const { height, weight, types } = pokemonData;\r\n  const typeNames = !!types ? types.sort((typeObj: any) => typeObj.slot).map((type: any) => type.type).map((type: any) => type.name).join(', ') : []\r\n  return (\r\n    <section>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>height: {height} weight: {weight} types: {typeNames}</p>\r\n        {/* {JSON.stringify(pokemonData, null, 4)} */}\r\n        <InfoRenderer pokeData={pokemonData} keysToHide={showedKeys}/>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst InfoRenderer = ({ pokeData, keysToHide }: {pokeData:any, keysToHide: string[]}) => {\r\n  const Link = ({ pokeDataKey }: any) => {\r\n    const [hovered, setHovered] = useState(false);\r\n    return (\r\n      <div>\r\n        <button onClick={() => setHovered(!hovered)}>{pokeDataKey}</button>\r\n        {hovered && <div>{JSON.stringify(pokeData[pokeDataKey], null, 4)}</div>}\r\n      </div>\r\n    )\r\n  }\r\n  const allKeys = Object.keys(pokeData);\r\n  const keysToShow = allKeys.filter((key) => !keysToHide.includes(key));\r\n  return <div>{keysToShow.map((pokeKey, index) => <Link key={index} pokeDataKey={pokeKey} />)}</div>\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { PokemonList } from './list';\r\nimport { getFirstTwenty } from './api';\r\nimport { Props as PokemonData } from './single';\r\nimport { isEqual } from 'lodash';\r\nimport { Switch, Route } from 'react-router';\r\nimport { urls } from 'components/router';\r\nimport { FullPokemon } from './full';\r\ntype Props = {};\r\nexport function Pokemon(props: Props) {\r\n  const [pokemonList, setPokemonList] = useState<PokemonData[]>([])\r\n  const [filteredList, setFilteredList] = useState<PokemonData[]>([])\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    const updatePokemon = async () => {\r\n      const newList = await getFirstTwenty();\r\n      setPokemonList(newList);\r\n    }\r\n    updatePokemon();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filtered = pokemonList.filter(pokemon => (pokemon.name.search(filter) >= 0));\r\n    if (!isEqual(filteredList, filtered)) {\r\n      setFilteredList(filtered)\r\n    }\r\n  }, [filter, pokemonList, filteredList]);\r\n  const ListSection = () => {\r\n    return (\r\n      <>\r\n        <span>filter:</span><input value={filter} onChange={e => setFilter(e.target.value)} />\r\n        <PokemonList pokemonList={filteredList} />\r\n      </>\r\n    )\r\n  }\r\n  const paths = Object.keys(urls['/']);\r\n  console.log(paths[0])\r\n  return (\r\n    <section>\r\n      <Switch>\r\n        <Route exact path={`/${paths[0]}`} render={() => <ListSection />} />\r\n        <Route exact path={`/${paths[0]}/:name`} component={FullPokemon} />\r\n      </Switch>\r\n    </section>\r\n  )\r\n}","import React from 'react';\r\nimport { Home } from 'components/pages/home'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport GenericPage from 'components/pages/shared/genericPage';\r\nimport TestParentPage from './pages/shared/testParentPage';\r\nimport { Pokemon } from './pages/pokemon';\r\nimport logo from 'logo.svg';\r\nimport pokeball from 'pokeball.svg'\r\nconst [Page1, Page2, Page3] = [1, 2, 3].map(num => <GenericPage title={num} />)\r\n\r\nexport const urls = {\r\n  '/': {\r\n    'pokemon': {},\r\n    '/1': {},\r\n    '/2': {},\r\n    '/3': {},\r\n    '/4': {\r\n      '/1': {},\r\n      '/2': {}\r\n    }\r\n  }\r\n}\r\n\r\nexport function Router() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Switch>\r\n          <Route path='/pokemon' render={() => <img src={pokeball} className=\"App-logo\" alt=\"logo\" />} />\r\n          <Route path='/' render={() => <img src={logo} className=\"App-logo\" alt=\"logo\" />} />\r\n        </Switch>\r\n\r\n\r\n      </header>\r\n      <main>\r\n        <Home />\r\n        <Switch>\r\n          <Route exact path='/1' render={() => Page1} />\r\n          <Route exact path='/2' render={() => Page2} />\r\n          <Route exact path='/3' render={() => Page3} />\r\n          <Route path='/4' component={TestParentPage} />\r\n          <Route path='/pokemon' component={Pokemon} />\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport { Router } from 'components/router';\r\nimport 'App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Router />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const initialState = {\r\n  terminal: {\r\n    command: '',\r\n    commandArgs: [] as string[],\r\n    ls: [] as string[]\r\n  }\r\n}","import { createStore, combineReducers } from 'redux';\r\nimport { TerminalReducer as terminal } from 'components/terminal/reducer';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  terminal,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = createStore(persistedReducer)\r\nconst persistor = persistStore(store)\r\n\r\nexport { store, persistor }","import { TerminalActions, actions } from './actions';\r\nimport { Action } from 'redux';\r\nimport { initialState } from 'initialState';\r\n\r\nexport type TerminalAction = (\r\n  Action<TerminalActions>\r\n  & { payload: any }\r\n)\r\n\r\n\r\nexport const TerminalReducer = (state = initialState.terminal, action: TerminalAction) => {\r\n  switch (action.type) {\r\n    case TerminalActions.SUBMIT:\r\n      const { command = '', commandArgs = [] } = action.payload as ReturnType<typeof actions.submitTerminal>[\"payload\"];\r\n      return { ...state, command, commandArgs }\r\n    case TerminalActions.LS:\r\n      return { ...state, ls: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store, persistor } from 'store';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nReactDOM.render(\r\n  (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  ), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}